#!/usr/bin/env python3
import argparse
import dns.name
import dns.resolver
import ipaddress
import subprocess

parser = argparse.ArgumentParser()
parser.add_argument("-g", "--gss", action="store_true",
                    help="use Kerberos authentication via GSS-TSIG")
parser.add_argument("-d", "--debug", action="store_true",
                    help="enable nsupdate debugging")
parser.add_argument("-z", "--zone",
                    # XXX: Default until I figure out why SOA lookups return SERVFAIL
                    default="a.0.f.7.2.e.8.7.7.0.1.0.0.2.ip6.arpa.",
                    help="override automatically determined rDNS zone")
parser.add_argument("address",
                    help="IPv6 address to update the PTR for")
parser.add_argument("target",
                    help="PTR target domain name, or \".\" to remove")
args = parser.parse_args()

address = ipaddress.IPv6Address(args.address)
rname = dns.name.from_text(address.reverse_pointer)
target = dns.name.from_text(args.target)

if args.zone:
    zone = dns.name.from_text(args.zone)
else:
    zone = dns.resolver.zone_for_name(rname)

ttl = 3600

print(f"Updating zone \"{zone}\"")

nsupdate_args = ["nsupdate"]
if args.debug:
    nsupdate_args += ["-d"]
if args.gss:
    nsupdate_args += ["-g"]

if str(target) == ".":
    print(f"Removing PTR for [{address}]")
    cmds = [f"zone {zone}\n",
            f"del {rname} {ttl} PTR\n",
            f"send\n"]
else:
    print(f"Changing PTR for [{address}] to \"{target}\"")
    cmds = [f"zone {zone}\n",
            f"del {rname} {ttl} PTR\n",
            f"add {rname} {ttl} PTR {target}\n",
            f"send\n"]

subprocess.run(nsupdate_args,
               input="".join(cmds).encode(),
               check=True)
