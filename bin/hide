#!/usr/bin/env bash
# hide -- get rid of no-longer-useful files

. lib.bash || exit
. libks.bash || exit

usage() {
	echo "Usage: $progname [-d <dir>] [-T] [-y <year>] <files>..."
	echo ""
	echo "Puts useless files in ~/Attic/Misc/<year>/ because I don't want to actually"
	echo "delete them."
	echo ""
	echo_opt "-d <dir>" "Put all files in a subdirectory"
	echo_opt "-T" "Use current year, not file modification time"
	echo_opt "-y <year>" "Use specified year, not file modification time"
}

_put() {
	local src=$1 dst=$2

	[[ ! -e "$dst" ]] && {
		log "moving to \"${dst#$HOME/}\""
		mv -f "$src" "$dst"
	}
}

dir="$HOME/Attic/Misc"
if [[ ! -d $dir ]]; then
	dir="/net/ember/home/grawity/Attic/Misc"
	if [[ ! -d $dir ]]; then
		die "Misc directory not found"
	fi
	info "using location '$dir'"
fi

# parse command line

arg_mtime=1
arg_subdir=
arg_year=

while getopts ":D:d:Ty:" OPT; do
	case $OPT in
	D) dir=$OPTARG;;
	d) arg_subdir=$OPTARG;;
	T) arg_mtime=0; arg_year=$(date +%Y);;
	y) arg_mtime=0; arg_year=$OPTARG;;
	*) lib:die_getopts;;
	esac
done; shift $((OPTIND-1))

if ! (( $# )); then
	die "files to hide not specified"
fi

# move files

for arg; do
	if [[ ! -e $arg ]]; then
		err "item \"$arg\" not found"
		continue
	fi

	src=$(readlink -f "$arg")

	arg=${arg%/}
	name=${arg##*/}
	debug "name='$name'"
	if [[ $name == *.* ]]; then
		base=${name%.*}
		ext=${name##*.}
	else
		base=$name
		ext=
	fi
	debug "... base='$base' ext='$ext'"

	if (( arg_mtime )); then
		dstdir=$dir/$(date +%Y -d @$(stat -c %Y "$arg"))
	elif (( arg_year )); then
		dstdir=$dir/$arg_year
	else
		dstdir=$dir/$(date +%Y)
	fi
	if [[ $arg_subdir ]]; then
		dstdir+=/$arg_subdir
	fi
	debug "... dstdir='$dstdir'"
	mkdir -p "$dstdir"

	dst="$dstdir/$name"
	_put "$arg" "$dst" ||
	for (( count=2; count < 9999; count++ )); do
		dst="$dstdir/$base-$count${ext:+.}$ext"
		_put "$arg" "$dst" && break
	done

	perms=$(stat -c %a "$dst") &&
	chmod u+w "$dst" &&
	ks:setattr "$dst" stashed.from "$HOSTNAME:$src" &&
	ks:setattr "$dst" stashed.when "$(date -Iseconds)" &&
	chmod "$perms" "$dst"
done

(( ! errors ))
