#!/usr/bin/env bash
# capture - easy wrapper around ssh+tcpdump

. lib.bash || exit

unset ${!arg_*}

while (( $# )); do
	case ${1#--} in
	on)		arg_on=$2; shift;;
	-e)		arg_ethers=1;;
	-f|filter)	arg_filter=$2; shift;;
	host)		arg_f_host=$2; shift;;
	vlan)		arg_vlan=$2; shift;;
	name)		arg_name=$2; shift;;
	*)	
		if [[ $1 == */* && ! $arg_on ]]; then
			arg_on=$1
		elif [[ ! $arg_filter ]]; then
			arg_filter=$1
		else
			err "bad arg: \"$1\""
		fi;;
	esac
	shift
done

declare -A hosts=() interfaces=()

conf=~/lib/capture.aliases
#|| die "could not load configuration"

while IFS='=' read -r key value; do
	if [[ $key == '#'* ]]; then
		continue
	elif [[ $key == '/'* ]]; then
		names=${key#/}
		for name in ${names//,/ }; do
			debug "load iface: $current_host / $name = $value"
			interfaces["$current_host/$name"]=$value
		done
	elif [[ $key ]]; then
		current_host=$key
		debug "load host: $current_host = $value"
		hosts["$current_host"]=$value
	fi
done < "$conf" || die "could not load configuration"

arg_host=${arg_on%%/*}
arg_iface=${arg_on#*/}

[[ $arg_host && $arg_iface && $arg_iface != */* ]] \
	|| die "host or interface not specified"

target_host=${hosts["$arg_host"]:-$arg_host}
target_iface=${interfaces["$arg_host/$arg_iface"]:-$arg_iface}
log "capturing on '$target_iface' at '$target_host'"

## craft the capture filter

filter=""
add_filter() { filter+="${filter:+ and }($*)"; }

# VLAN tag – changes global filter state, must be first
if [[ $arg_vlan ]]; then
	add_filter "vlan $arg_vlan"
fi
# ignore current SSH connection
add_filter "not (host \$1 and host \$3 and tcp port \$2 and tcp port \$4)"
# command-line 'host' shortcut
if [[ $arg_f_host == ??:??:??:??:??:?? ]]; then
	add_filter "ether host $arg_f_host"
elif [[ $arg_f_host ]]; then
	add_filter "host $arg_f_host"
fi
# command-line filter
if [[ $arg_filter ]]; then
	add_filter "$arg_filter"
fi
# no VLAN tag – changes global filter state, must be last
if ! [[ $arg_vlan ]]; then
	add_filter "not vlan"
fi

log "filter: $filter"

## craft the remote command

rcmd="set -- \$SSH_CONNECTION; tcpdump -n -i '$target_iface' -s 1536 -U -w - -G 3600"
rcmd+=" \"$filter\""
debug "remote command: $rcmd"

lcmd="tcpdump -n -r - -U"
if (( arg_ethers )); then
	lcmd+=" -e"
fi
debug "local command: $lcmd"

cap_name="$target_host.$target_iface"
if [[ $arg_name ]]; then
	cap_name+=".$arg_name"
fi

capf="$HOME/tmp/capture.$cap_name.pcap"
log "output: $capf"

trap '[[ -s "$capf" ]] || rm -f "$capf"; exit 0' INT QUIT EXIT

ssh -oTCPKeepAlive=yes "root@$target_host" "$rcmd" \
	| stdbuf -i0 -o0 tee "$capf" \
	| sh -c "$lcmd"
