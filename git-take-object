#!/usr/bin/env bash

srcgit() {
	git --git-dir="$src" "$@"
}

take() {
	local object=$1 type= hash= skipself=0

	if git cat-file -e "$object" 2>/dev/null; then
		type=$(git cat-file -t "$object")
		case $type in
			blob)
				echo "skip $type $object"
				return 0;;
			*)
				skipself=1;;
		esac
	fi

	if srcgit cat-file -e "$object"; then
		type=$(srcgit cat-file -t "$object")
		if (( ! skipself )); then
			echo "take $type $object"
			hash=$(srcgit cat-file "$type" "$object" \
				| git hash-object -w -t "$type" --stdin --no-filters)
		fi
		case $type in
			tag)
				take "$object^{}";;
			commit)
				#take "$object^{tree}";;
				srcgit cat-file -p "$object" \
				| sed '/^$/q' \
				| awk '$1 ~ /^(tree|parent)$/ {print $2}' \
				| while read hash; do
					take "$hash"
				done;;
			tree)
				srcgit ls-tree "$object" \
				| awk '{print $3}' \
				| while read hash; do
					take "$hash"
				done;;
		esac
	else
		return 1
	fi
}

src=$1; shift

src=$src/$(cd "$src" && git rev-parse --git-dir) || exit

nskip=0
ntake=0

for object; do
	take "$object" | while read action _; do
		case $action in
			skip) ((++nskip));;
			take) ((++ntake));;
		esac
		printf '\r:took %d, skipped %d\r' $ntake $nskip
	done
	printf '\n'
done
