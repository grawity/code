#!/usr/bin/env perl
use warnings;
use strict;
use File::stat;
use Nullroute::Lib;

my $infile = shift @ARGV;

if (!$infile) {
	_die("missing input file", 2);
} elsif (!-f $infile) {
	_die("input file \"$infile\" does not exist");
}

my $outfile = $infile;
$outfile =~ s/\.[^.]+?$/.mp4/;

if ($infile eq $outfile) {
	_die("input and output are the same file");
}

my @ff_args = ("ffmpeg",
		-hide_banner => (),
		-i => $infile,
		-acodec => "copy",
		-vcodec => "copy");

my %tag_args = (-type => "music");

for (@ARGV) {
	if (/^(year|date)=(.+)/) {
		push @ff_args, -metadata => "date=$2";
	}
	elsif (/^(name|song|title)=(.*)/) {
		push @ff_args, -metadata => "title=$2";
	}
	elsif (/^season=(.*)/) {
		push @ff_args, -metadata => "season_number=$1";
	}
	elsif (/^episode=(.*)/) {
		push @ff_args, -metadata => "episode_id=$1";
	}
	elsif (/^type=(.*)/) {
		$tag_args{-type} = $1;
	}
	elsif (/=/) {
		push @ff_args, -metadata => $_;
	}
	else {
		_die("unknown option '$_'", 2);
	}
}

my @tag_args = ("mp4tags", $outfile, %tag_args);

my $st = stat($infile);

push @ff_args, $outfile;

print join(" ", map {/[ $()*?<>;=]/ ? "'$_'" : $_} @ff_args), "\n";

system {"ffmpeg"} @ff_args;

system {"mp4tags"} @tag_args;

system "mp4info", $outfile;

if (-e $outfile) {
	system "trash", $infile;
	utime(undef, $st->mtime, $outfile);
} else {
	exit 1;
}
