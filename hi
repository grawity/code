#!/usr/bin/env python3
# hi -- show recent IRC highlights
import argparse
import datetime
from nullroute.core import Env
import io
import re
import os
import subprocess

def download_log(remote_host, remote_path, local_path):
    try:
        osize = os.stat(local_path).st_size
        rcmd = f"tail -c +{osize+1} '{remote_path}'"
    except FileNotFoundError:
        osize = 0
        rcmd = f"cat '{remote_path}'"

    with open(local_path, "ab") as fh:
        subprocess.run(["ssh", remote_host, rcmd],
                       stdout=fh,
                       check=True)

    nsize = os.stat(local_path).st_size
    return nsize-osize, osize

def vis(text):
    return re.sub(r"[\x00-\x1F\x80-\x9F]",
                  lambda m: "\033[2m<%02X>\033[m" % ord(m[0]),
                  text)

os.umask(0o077)

cache_path = Env.find_cache_file("highlights.txt")
config_path = Env.find_config_file("irc.conf")

rhost = "star"
rpath = "irclogs/perl.highmon.log"

delta, offs = download_log(rhost, rpath, cache_path)
if delta == 0:
    print("hi: no new items")
    exit()

with open(cache_path, "rb") as fh:
    fh.seek(offs)
    for line in io.TextIOWrapper(fh):
        date, wname, text = line.split("\t", 2)
        date = datetime.datetime.fromisoformat(date)
        wname = re.sub(r"^<(.+)>$", r"\1", wname)
        text = text.rstrip()
        text = vis(text)

        if "#" in wname:
            # Channel messages
            name = "?"
            if m := re.match(r"^<(\S+)> (.+)$", text):
                name = "<%s>" % m[1]
                text = m[2]
        else:
            # All kinds of non-channel messages
            if m := re.match(r"^<(\S+)> \1: (.+)$", text):
                # /notice
                name = "-%s-" % m[1]
                text = m[2]
            elif m := re.match(r"^<(\S+)> \1 (.+)$", text):
                # /me
                name = "* %s" % m[1]
                text = m[2]

        print(date, wname, name, text, sep="\t")
