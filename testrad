#!/usr/bin/env bash
# testrad -- automates RADIUS testing between domains

. lib.bash || exit

cd ~

have 'radtest'			|| err "missing 'radtest'"
have 'rad_eap_test'		|| err "missing 'rad_eap_test'"
test -x 'bin/eapol_test'	|| err "missing './bin/eapol_test'"

declare -- self via using
declare -A name user pass host secret eap _alias_
declare -- _user _pass _host _port _secret _eap _mech _outer

# parse arguments

while (( $# )); do
	if [[ ! $self ]]; then
		self=$1
		via=$self
	else
		case ${1#--} in
		'via')		via=$2; shift;;
		'using')	using=$2; shift;;
		'eap')		_eap=$2; shift;;
		'user')		_user=$2; shift;;
		'login')	_user=$2; shift;;
		'inner')	_user=$2; shift;;
		'outer')	_outer=$2; shift;;
		'pass')		_pass=$2; shift;;
		'host')		_host=$2; shift;;
		'port')		_port=$2; shift;;
		'secret')	_secret=$2; shift;;
		*)		err "bad arg: \"$1\"";;
		esac
	fi
	shift
done

[[ $self ]]	|| die "missing argument (our realm)"

# parse config

. ~/lib/testrad.conf.sh || die "could not load configuration"

while val=${_alias_[$self]}; [[ $val ]]; do
	debug "conf alias (\$self) \"$self\" -> \"$val\""
	self=$val
done

while val=${_alias_[$via]}; [[ $val ]]; do
	debug "conf alias (\$via) \"$via\" -> \"$val\""
	via=$val
done

# load parameters

[[ $_user ]]	|| _user=${user[$self]}
[[ $_pass ]]	|| _pass=${pass[$self]}
[[ $_eap ]]	|| _eap=${eap[$self]}
[[ $_host ]]	|| _host=${host[$via]}
[[ $_port ]]	|| _port=${port[$via]:-1812}
[[ $_secret ]]	|| _secret=${secret[$via]}
[[ $_outer ]]	|| _outer=${_user}

_eap=${_eap^^}
_mech=${using:-mschap}

[[ $_user ]]	|| err "missing username for '$self'"
if [[ $_pass == "-" ]]; then
	read -s -p "password for '$_user': " _pass; echo
fi
[[ $_pass ]]	|| err "missing password for '$self'"
[[ $_host ]]	|| err "missing RADIUS server for '$via'"
[[ $_secret ]]	|| err "missing RADIUS secret for '$via'"

case $_mech in
'pap')		_phase2='PAP';;
'chap')		_phase2='CHAP';;
'mschap')	_phase2='MSCHAPV2';;
'mschapv2')	_phase2='MSCHAPV2'; _mech='mschap';;
*)		err "unknown mechanism '$_mech'"
esac

(( ! errors )) || exit

log "account: \"$_user\""
debug "password: \"$_pass\""
log "home server: ${name[$self]} (${host[$self]:-none})"
if [[ "$self" != "$via" ]]; then
	log "proxy via: ${name[$via]} ($_host)"
fi

if [[ $_eap && $_eap != NO ]]; then
	log "mechanism: $_phase2 inside EAP-$_eap"
	if [[ "$_outer" != "$_user" ]]; then
		log "anonymous identity: \"$_outer\""
	fi
	cmd=(rad_eap_test -H "$_host" -P "$_port" -S "$_secret" -u "$_user" -p "$_pass"
	                  -A "$_outer" -m WPA-EAP -v -e "$_eap" -2 "$_phase2")
else
	log "using direct $_phase2"
	if [[ "$_outer" != "$_user" ]]; then
		die "anonymous identity \"$_outer\" not supported without EAP"
	fi
	cmd=(radtest -t "$_mech" "$_user" "$_pass" "$_host:$_port" 0 "$_secret")
fi

echo "+ ${cmd[*]}"

if "${cmd[@]}"; then
	log "test successful"
else
	r=$?
	err "test failed ($cmd returned $r)"
	exit $r
fi
