#!/usr/bin/env bash
# rconsole -- attach to a server's remote console via IPMI SOL

. lib.bash || exit

usage() {
	echo "Usage: $progname <host> [-p] [-P <state>] [-v]"
	echo
	echo_opt "-p"		"show system power status"
	echo_opt "-P state"	"switch system power on/off/reset/cycle"
	echo_opt "-v"		"be verbose"
}

case $1 in
	--help)		usage; exit;;
esac
case ${0##*/} in
	*-console)	host=${0##*/}; host=${host%-console};;
	*)		host=${1?missing hostname}; shift;;
esac

verbose=0
opt_gpower=0
opt_spower=""

while getopts ":P:pv" OPT; do
	case $OPT in
	P) opt_spower=$OPTARG;;
	p) opt_gpower=1;;
	v) verbose=1;;
	*) lib::die_getopts;;
	esac
done; shift $((OPTIND-1))

case $host in
	*.*)	bhost=$host;;
	*)	bhost="bmc.$host.nullroute.lt";;
esac

creds=$(getnetrc -sdf %a:%u:%p "ipmi/$bhost" ||
        getnetrc -sdf %a:%u:%p "ipmi/$host" ||
        getnetrc -sdf %a:%u:%p "ipmi/*")
priv=${creds%%:*}; creds=${creds#*:}
user=${creds%%:*}; creds=${creds#*:}
pass=$creds
if [[ ! $user || ! $pass ]]; then
	die "Credentials for 'ipmi/$bhost' not found in ~/.netrc"
fi
if [[ ! $priv ]]; then
	# Guess privilege level from username (e.g. Operator => priv OPERATOR)
	priv=${user^^}
fi

if ((verbose)); then
	echo "Connecting to '$bhost' as '$user' level '$priv'" >&2
fi

# New ipmitool defaults to ciphersuite 17 (AES-CBC-128 with HMAC-SHA256), which
# iLO4 does not support. Fall back to the HMAC-SHA1 variant.
cipher=3

if have ipmipower && have ipmiconsole && [[ ! $USE_IPMITOOL ]]; then
	args=(-h "$bhost" -u "$user" -p "$pass" -l "$priv" -I "$cipher")
	bmc_console() { ipmiconsole "${args[@]}"; }
	bmc_get_power() { ipmipower -D LAN_2_0 "${args[@]}" --stat; }
	bmc_set_power() { ipmipower -D LAN_2_0 "${args[@]}" --${1?}; }
elif have ipmitool; then
	args=(-H "$bhost" -U "$user" -P "$pass" -L "$priv" -C "$cipher")
	# Use an escape character different from the SSH one
	args+=(-e '&')
	bmc_console() { ipmitool -I lanplus "${args[@]}" sol activate; }
	bmc_get_power() { ipmitool -I lanplus "${args[@]}" power status; }
	bmc_set_power() { ipmitool -I lanplus "${args[@]}" power ${1?}; }
else
	die "no IPMI client tools installed"
fi

if (( opt_gpower )); then
	echo "[Connecting to '$bhost']"
	bmc_get_power
elif [[ $opt_spower ]]; then
	if [[ $opt_spower != @(on|off|cycle|reset) ]]; then
		die "Unknown power command '$opt_spower'"
	fi
	confirm "Send 'power $opt_spower' command to '$bhost'?" || exit
	echo "[Connecting to '$bhost']"
	bmc_set_power "$opt_spower"
elif [[ ! $1 ]]; then
	echo "[Connecting to '$bhost' ... escape sequence is '&.']"
	bmc_console
else
	die "Unrecognized arguments: '$*'"
fi
