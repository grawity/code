#!/usr/bin/env python
import os
import sys

def get_local_tags():
    tags = set()
    with os.popen("git tag", "r") as proc:
        for line in proc:
            tag = line.strip()
            tags.add(tag)
    return tags

def get_remotes():
    remotes = set()
    with os.popen("git remote") as proc:
        for line in proc:
            remote = line.strip()
            remotes.add(remote)
    return remotes

def get_remote_tagopt(remote=None):
    with os.popen("git config remote.%s.tagopt" % remote, "r") as proc:
        line = proc.read().strip()
    if line == "--no-tags":
        return False
    return True

def get_remote_tags(remote=None):
    tags = set()
    prefix = "refs/tags/"
    with os.popen("git ls-remote %s" % remote, "r") as proc:
        for line in proc:
            sha, ref = line.strip().split()
            if ref.endswith("^{}"):
                continue
            if ref.startswith(prefix):
                tag = ref[len(prefix):]
                tags.add(tag)
    return tags

do_clean = False

try:
    if sys.argv[1] == "-d":
        do_clean = True
        sys.argv.pop(1)
except IndexError:
    pass

remotes = sys.argv[1:] or get_remotes()

local_tags = get_local_tags()

remote_tags = set()
for remote in remotes:
    if get_remote_tagopt(remote):
        remote_tags |= get_remote_tags(remote)

if do_clean:
    diff = local_tags - remote_tags
    for tag in diff:
        os.system("git tag -d '%s'" % tag)
else:
    diff = local_tags - remote_tags
    if diff:
        print("# Local only:")
        for tag in sorted(diff):
            print("+ %s" % tag)

    diff = remote_tags - local_tags
    if diff:
        print("# Remote only:")
        for tag in sorted(diff):
            print("- %s" % tag)

