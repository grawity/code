#!/usr/bin/env bash
# igd-bmon - Monitor bandwidth usage of an UPnP IGD:2 capable router.
#
# (Can probably be adjusted to work with IGD:1 as well, but upnpc appears to
# make several more IPC calls for '-s' than '-S', possibly reducing accuracy.)

# URL of the "XML root description" (find using Wireshark and 'upnpc -S')
url="http://192.168.1.254:8000/ltpd8iyjpxe/IGD/upnp/IGD.xml"

# Poll interval (2â€“5 seconds recommended)
interval=3

#nlines=$(stty size | awk '{print $1}')
#nlines=$(( nlines - 5 ))
nlines=20

txlast=0
rxlast=0
last=0
iter=0

while true; do
	sleep $interval &
	data=$(upnpc -u "$url" -S)
	txbytes=$(echo "$data" | awk '/^Bytes:/{print $3}')
	rxbytes=$(echo "$data" | awk '/^Bytes:/{print $5}')
	now=$(date +%s)

	if (( nlines && ++iter >= nlines )); then
		printf '\e[%dA\e[1M\e[%dB' $((nlines-1)) $((nlines-2))
	fi

	if (( last > 0 )); then
		if (( txbytes < txlast )); then
			logger -t "igd-bmon" "Received TxBytes lower than before (was $txlast, now $txbytes)"
		fi
		if (( rxbytes < rxlast )); then
			logger -t "igd-bmon" "Received RxBytes lower than before (was $rxlast, now $rxbytes)"
		fi
		txdelta=$(( txbytes - txlast ))
		rxdelta=$(( rxbytes - rxlast ))
		txrate=$(( txdelta / interval ))
		rxrate=$(( rxdelta / interval ))
		if (( txrate > 70*1000 )); then txcolor=31
		elif (( txrate > 50*1000 )); then txcolor=33
		elif (( txrate > 10*1000 )); then txcolor=32
		else txcolor=
		fi
		if (( rxrate >= 1*1000*1000 )); then rxcolor=31
		elif (( rxrate >= 800*1000 )); then rxcolor=33
		elif (( rxrate >= 200*1000 )); then rxcolor=32
		else rxcolor=
		fi
		date=$(date +%T -d "@$now")
		txrate=$(numfmt --to=iec --suffix=B/s -- $txrate | sed -r 's/[0-9.]+/& /')
		rxrate=$(numfmt --to=iec --suffix=B/s -- $rxrate | sed -r 's/[0-9.]+/& /')
	else
		txcolor=35
		rxcolor=35
		date="Total"
		txrate=$(numfmt --to=iec --suffix=B -- $txbytes | sed -r 's/[0-9.]+/& /')
		rxrate=$(numfmt --to=iec --suffix=B -- $rxbytes | sed -r 's/[0-9.]+/& /')
	fi

	printf "\e[2m%8s\e[m  "                   "$date"
	printf "\e[%sm%12s\e[m \e[2mup\e[m  "     "$txcolor" "$txrate"
	printf "\e[%sm%12s\e[m \e[2mdown\e[2m\n"  "$rxcolor" "$rxrate"

	txlast=$txbytes
	rxlast=$rxbytes
	last=$now
	wait
done
