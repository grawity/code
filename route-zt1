#!/usr/bin/env bash

. lib.bash || exit

declare -a networks gateways
declare -a args args4 args6
declare -i unroute=0
declare -- rtrdomain=zt1.nullroute.eu.org

while getopts ":u" OPT; do
	case $OPT in
	u) unroute=1;;
	*) lib::die_getopts;;
	esac
done; shift $((OPTIND-1))

(( $# )) || set -- dn42

case $1 in
	dn42)
		networks=(172.20.0.0/14 fd00::/8)
		gateways=(sky wolke)
		;;
	uk)
		networks=(10.0.0.0/8 2001:778:e27f::/48)
		gateways=(ghost)
		args=(metric 200)
		;;
	mesh)
		networks=(10.147.0.0/16)
		gateways=(ghost)
		args=(metric 200)
		;;
	@sky)
		networks=(::/0)
		gateways=(sky)
		args=(metric 500)
		;;
	*)
		die "unknown network '$1'"
		;;
esac

if (( unroute )); then
	for net in "${networks[@]}"; do
		info "removing routes to $net"
		if [[ $net == *:* ]]; then
			sudo: ip -6 route flush exact $net
		else
			sudo: ip -4 route flush exact $net
		fi
	done
	exit
fi

gws4=()
gws6=()

for host in "${gateways[@]}"; do
	fqdn=$host.zt1.nullroute.eu.org
	gw4=$(name2addr -4 $fqdn) || die "could not resolve $fqdn for IPv4"
	gw6=$(name2addr -6 $fqdn) || die "could not resolve $fqdn for IPv6"
	info "resolved $host to $gw4, $gw6"
	gws4+=("$gw4")
	gws6+=("$gw6")
done

args4=("${args[@]}" "${args4[@]}")
args6=("${args[@]}" "${args6[@]}")

for gw in $(printf '%s\n' "${gws4[@]}" | natsort); do
	args4+=(nexthop via $gw dev zt1)
done

for gw in "${gws6[@]}"; do
	args6+=(nexthop via $gw dev zt1)
done

for net in "${networks[@]}"; do
	info "adding route to $net"
	if [[ $net == *:* ]]; then
		sudo: ip -6 route replace $net "${args6[@]}"
	else
		sudo: ip -4 route replace $net "${args4[@]}"
	fi
done
