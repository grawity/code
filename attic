#!/usr/bin/env bash

. lib.bash || exit

DISK=/mnt/backup
ARCHIVE=$DISK
BACKUP=$DISK/latest

todo=()

if ! mountpoint -q "$DISK"; then
	die "backup disk not mounted on '$DISK'"
fi

abspath() { realpath -s "$1" | sed 's|/*$||'; }
follow()  { readlink -f "$1" | sed 's|/*$||'; }

for dir; do
	dir=$(abspath "$dir")

	case $dir in
	"$HOME"/*)	todo+=("${dir#"$HOME"/}");;
	"$BACKUP"/*)	todo+=("${dir#"$BACKUP"/}");;
	*)		err "path '$dir' is outside home";;
	esac
done

(( !errors )) || exit

skip=${#todo[@]}

for subpath in "${todo[@]}"; do
	want_relocate=0

	if [[ $subpath == Attic/* ]]; then
		archive_path="$ARCHIVE/$subpath"
	else
		want_relocate=1
		archive_path="$ARCHIVE/Attic/$subpath"
	fi

	if [[ -e "$archive_path" ]]; then
		err "path '$subpath' already exists in attic"
		continue
	fi

	if [[ -L "$HOME/$subpath" ]]; then
		err "path '$subpath' is a symlink"
		continue
	fi

	if [[ ! -e "$BACKUP/$subpath" ]]; then
		err "path '$subpath' not found in backup"
		continue
	fi

	if (( want_relocate )); then
		warn "path \"$subpath\" is outside ~/Attic"
		if ! confirm "relocate to \"Attic/$subpath\"?"; then
			continue
		fi
	fi

	notice "archiving $subpath"
	mkdir -p "${archive_path%/*}"

	log "moving from backup to attic"
	mv "$BACKUP/$subpath" "$archive_path"

	log "moving from home to trash"
	trash --no-verbose "$HOME/$subpath"

	log "symlinking from home to attic"
	ln -s "$archive_path" "$HOME/$subpath"

	(( --skip ))
done

if (( skip )); then
	warn "skipped $skip items out of ${#todo[@]}"
fi

true
