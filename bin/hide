#!/usr/bin/env bash
# hide -- move no-longer-useful files to the attic

. lib.bash || exit

usage() {
	echo "Usage: $progname [-d <dir>] [-y <year>] <files>..."
	echo ""
	echo "Put away old files to ~/Attic/Misc/<year>."
	echo ""
	echo_opt "-d <dir>"	"Put files in a subdirectory"
	echo_opt "-y <year>"	"Use specified year instead of modification time"
}

dir="$HOME/Attic/Misc"
if [[ ! -d $dir ]]; then
	dir="/net/ember/home/grawity/Attic/Misc"
	if [[ ! -d $dir ]]; then
		vdie "misc directory not found and not accessible via NFS"
	fi
	vmsg "using NFS location ($dir)"
fi

# parse command line

arg_mtime=1
arg_subdir=
arg_year=

while getopts ":D:d:y:" OPT; do
	case $OPT in
	D) dir=$OPTARG;;
	d) arg_subdir=$OPTARG;;
	y) arg_mtime=0; arg_year=$OPTARG;;
	*) lib:die_getopts;;
	esac
done; shift $((OPTIND-1))

if (( ! $# )); then
	vdie "no files specified"
fi

if [[ $arg_year == @(now|today) ]]; then
	arg_year=$(date +%Y)
fi

# move files

for arg; do
	if [[ ! -e $arg ]]; then
		vmsg "file \"$arg\" not found" >&2
		let ++errors
		continue
	fi

	src=$(readlink -f "$arg")

	arg=${arg%/}
	name=${arg##*/}
	debug "name='$name'"
	if [[ $name == *.* ]]; then
		base=${name%.*}
		ext=${name##*.}
	else
		base=$name
		ext=
	fi
	debug "... base='$base' ext='$ext'"

	if (( arg_mtime )); then
		dstdir=$dir/$(date +%Y -d @$(stat -c %Y "$arg"))
	elif [[ $arg_year ]]; then
		dstdir=$dir/$arg_year
	else
		dstdir=$dir/$(date +%Y)
	fi
	if [[ $arg_subdir ]]; then
		dstdir+=/$arg_subdir
	fi
	debug "... dstdir='$dstdir'"
	mkdir -p "$dstdir"

	dst="$dstdir/$name"
	for (( count=1; count < 9999; count++ )); do
		if [[ ! -e $dst ]]; then
			vmsg "moving \"$src\" to \"${dst#$HOME/}\""
			mv -n "$src" "$dst" && break
		fi
		dst="$dstdir/$base-$count${ext:+.}$ext"
	done

	perms=$(stat -c %a "$dst") &&
	chmod u+w "$dst" &&
	attr -q -s "stashed.from" -V "$HOSTNAME:$src" "$dst" &&
	attr -q -s "stashed.when" -V "$(date -Iseconds)" "$dst" &&
	chmod "$perms" "$dst"
done

(( ! errors ))
