#!/usr/bin/env python3
import argparse
import os
import subprocess

def read_env(pid):
    env = None
    try:
        with open("/proc/%d/environ" % pid, "rb") as fd:
            env = parse_env(fd.read())
    except IOError as e:
        res = subprocess.run(["sudo", "cat", "/proc/%d/environ" % pid],
                             stdout=subprocess.PIPE,
                             check=True)
        env = parse_env(res.stdout)
    return env

def parse_env(buf):
    env = buf.split(b'\0')
    return dict(k.split(b'=', 1) for k in env if k != b'')

parser = argparse.ArgumentParser()
parser.description = "Get environment variables from a running process."
parser.add_argument("pid",
                        metavar="<pid>",
                        type=int,
                        help="process to copy environment from")
parser.add_argument("command",
                        metavar="<command>",
                        nargs="*",
                        default=["/usr/bin/env"],
                        help="command to run with the new environment")
args = parser.parse_args()

env = read_env(args.pid)
if not env:
    exit("envcp: environment was empty")

os.execvpe(args.command[0], args.command, env)
