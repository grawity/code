#!/usr/bin/env bash
# song - various ~/Music management tasks

root=~/Music
ipod=/media/haar/Music

FILENAME() { mpc current -f '%file%'; }
FILEPATH() { echo "$root/$(FILENAME)"; }
SONGNAME() { mpc current; }

_refresh() {
	filename=`FILENAME`
	filepath=`FILEPATH`
	songname=`SONGNAME`
}

_refresh

getattr() {
	getfattr -n "user.$2" --only-values "$1" 2>/dev/null
}

setattr() {
	setfattr -n "user.$2" -v "$3" "$1"
}

ratings() {
	local min=${1:-0}
	songdb-rate list $min
}

rate() {
	local rating=$1
	if [[ ! $rating ]]; then
		songdb-rate get "$filename" "$songname"
		return
	fi

	if (( rating > 5 )); then
		echo "Rating out of range" >&2
		return 1
	fi
	setattr "$filepath" rating "$rating"
	songdb-rate set "$filename" "$songname" "$rating"
}

_rating_bar() {
	local r=$1
	local s=''
	s=$'\e[1;33m'
	for (( i = 0; i < r; i++ )); do
		s+='▮'
		#s+='♪'
	done
	s+=$'\e[1;30m'
	for (( i; i < 5; i++ )); do
		s+='▯'
	done
	s+=$'\e[m'
	echo "$s"
}

next() {
	mpc -wq next
	_refresh
	rate
}

queue() {
	ipod queue "$filename"
}

function rm() {
	#command rm -v "$root/$filename"
	if [[ -z $filename ]]; then
		echo "Refusing to remove $root."
	fi

	#gvfs-trash "$root/$filename" &&
	trash=~/Backup/.Trashed-music
	mkdir -p "$trash/${filename%/*}" &&
	cp -a "$root/$filename" "$trash/$filename" &&
	trash "$root/$filename" && {
		if [[ ! -t 0 ]]; then
			notify --transient --icon="user-trash" \
				"Song removed" "$filename"
		fi
	}
	#[[ -d $ipod ]] &&
	#	command rm -vi "$ipod/$filename"
	return 0
}

tag() {
	mid3v2 "$@"
}

if (( $# )); then
	args=("$@")
	arg=false
	for (( i=1; i < $#; i++ )); do
		if [[ ${args[i]} == "{}" ]]; then
			args[i]=$filepath
			arg=true
		elif [[ ${args[i]} == "{rel}" ]]; then
			args[i]=$filename
			arg=true
		fi
	done
	#$arg || args+=("$filepath")
	set -- "${args[@]}"
	"$@"
elif [[ -t 1 ]]; then
	rate
else
	echo "$filepath"
fi
