#!/usr/bin/env bash
# gettermbg -- Check whether the terminal has a light or dark background.
#
# Queries the Xterm background and uses the formula from:
# https://learn.microsoft.com/en-us/windows/apps/desktop/modernize/apply-windows-themes#know-when-dark-mode-is-enabled
#
# A more advanced tool is available at:
# https://github.com/rocky/shell-term-background/blob/master/term-background.bash

exec </dev/tty >/dev/tty

# Request Xterm background color OSC
printf '\e]11;?\e\\' # returns '\e]11;rgb:XXXX/YYYY/ZZZZ\e\\'

# Request Primary Device Attributes, to avoid timeouts when the terminal
# doesn't understand the Xterm OSC
printf '\e[c' # returns '\e[?XXXc'

# Read up to the ? in the middle of Primary DA answer
if read -r -s -d '?' -t 2 ans1 &&
   read -r -s -d 'c' -t 2 ans2; then
	ans="${ans1}?${ans2}c"
	re=$'^\e\\]11;(rgb:(.+)/(.+)/(.+))\e'
	if [[ $ans1 =~ $re ]]; then
		declare -i r="0x${BASH_REMATCH[2]}"
		declare -i g="0x${BASH_REMATCH[3]}"
		declare -i b="0x${BASH_REMATCH[4]}"
		# X11 colors are rrrr/gggg/bbbb, e.g. "rgb:ffff/f7f7/dfdf"
		# or "rgb:1c1c/1c1c/1c1c".
		r="r >> 8"
		g="g >> 8"
		b="b >> 8"
		# Use the formula from Microsoft
		declare -i is_light='(5*g + 2*r + b) > (8*128)'

		case $1 in
		"")		echo "${BASH_REMATCH[1]}";;
		-l|--is-light)	(( is_light ));;
		-d|--is-dark)	(( !is_light ));;
		*)		echo "gettermbg: Bad usage" >&2; exit 2;;
		esac
	elif [[ $ans1 == $'\e[' ]]; then
		# No answer to color inquiry, all we got is Primary DA
		case $1 in
		"")		echo "gettermbg: No reply" >&2; exit 1;;
		-l|--is-light)	false;;
		-d|--is-dark)	true;;
		*)		echo "gettermbg: Bad usage" >&2; exit 2;;
		esac
	else
		echo "gettermbg: Invalid reply from terminal: ${ans@Q}" >&2
		exit 3
	fi
else
	echo "gettermbg: Did not receive Primary DA reply from terminal" >&2
	exit 4
fi
