#!/usr/bin/env python3
# arpaname -- convert IP addresses to their reverse-lookup domain names
#
# This is an improved version of BIND's 'arpaname' with support for CIDR
# prefixes, e.g. `arpaname 2001:db8::/48` outputs the domain for that network.
import argparse
import ipaddress

parser = argparse.ArgumentParser()
parser.add_argument("address", nargs="+")
args = parser.parse_args()

for arg in args.address:
    if "/" in arg:
        net = ipaddress.ip_network(arg)
        rev = net.reverse_pointer.split(".")
        if net.version == 6:
            full, bits = divmod(net.prefixlen, 4)
            full += 2
            if bits:
                full += 1
                start = int(rev[-full], 16)
                count = 2 ** (4 - bits)
                for i in range(count):
                    rev[-full] = "%x" % (start + i)
                    print(".".join(rev[-full:]))
            else:
                print(".".join(rev[-full:]))
        else:
            full, bits = divmod(net.prefixlen, 8)
            full += 2
            if bits:
                print("NOT IMPLEMENTED", rev)
            else:
                if net.prefixlen == 32:
                    rev[0] = "0"
                print(".".join(rev[-full:]))
    else:
        net = ipaddress.ip_address(arg)
        print(net.reverse_pointer)
