#!/usr/bin/env python
import os
import sys
import hashlib

finished_dirs = set()

class HashDatabase(object):
    def __init__(self, db_file):
        self.file = db_file
        self._seen_files = set()

    def maybe_hash(self, path):
        if not path in self._seen_files:
            hash = self.hash_file(path)
            self.add_file(path, hash)
            self._seen_files.add(path)

    def hash_file(self, path):
        print("hashing", path)
        bs = 4 * 1024 * 1024
        h = hashlib.sha1()
        n = os.stat(path).st_size
        p = 0
        with open(path, "rb") as fh:
            buf = True
            while buf:
                buf = fh.read(bs)
                h.update(buf)
                n += bs
        return h.digest()

    def add_file(self, path, hash):
        self._log.write("%s *%s\n", 

hdb = HashDatabase()

for root_dir in sys.argv[1:]:
    for subdir, dirs, files in os.walk(root_dir):
        for name in files:
            path = os.path.join(subdir, name)
            hdb.maybe_hash(path)
