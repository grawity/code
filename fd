#!/usr/bin/env bash

. lib.bash || exit

set -e

sizes=(
	[720]=$((  720 * 1024 ))
	[144]=$(( 1440 * 1024 ))
	[288]=$(( 2880 * 1024 ))
)

case $1 in
    make|mk)
	name=$2
	if ! [[ $name ]]; then
		die "missing image file name"
	fi

	size=${3:-144}
	if [[ $size == *k ]]; then
		size=${size%k}
		size=$(( size * 1024 ))
	elif [[ ${sizes[size]} ]]; then
		size=${sizes[size]}
	elif (( size < 4096 )); then
		size=$(( size * 1024 ))
	fi

	size_k=$(( size / 1024 ))
	log "image size: $size_k kB ($size bytes)"

	case $name in
	*.vfd|*.dsk|*.ima|*.img)
		name=${name%.*}.img;;
	*)
		name+=.img;;
	esac

	if [[ -e $name ]]; then
		die "file \"$name\" already exists"
	fi

	fallocate -l "$size" "$name"
	mkfs.vfat "$name"
	log "created \"$name\""
	;;
    mount|m)
	name=$2
	if ! [[ $name ]]; then
		die "missing image file name"
	fi

	if [[ -e $name.img ]]; then
		name+=.img
	fi
	if ! [[ -e $name ]]; then
		die "file \"$name\" does not eixist"
	fi

	mtpt=$XDG_RUNTIME_DIR/fd
	mkdir -p "$mtpt"
	sudo mount "$name" "$mtpt" -o loop,uid=$UID
	log "mounted \"$name\" on $mtpt"
	;;
    umount|unmount|u)
	mtpt=$XDG_RUNTIME_DIR/fd
	if ! mountpoint -q "$mtpt"; then
		die "nothing mounted at \"$mtpt\""
	fi

	ldev=$(findmnt -n -o SOURCE "$mtpt")
	if [[ $ldev != /dev/loop* ]]; then
		die "not a loop device â€“ \"$mtpt\" has $ldev mounted"
	fi

	file=$(losetup -n -O BACK-FILE "$ldev")

	sudo umount "$mtpt"
	until rmdir "$mtpt" 2>/dev/null; do sleep 1; done &
	log "unmounted \"$mtpt\""
	;;
    '')
	{
	echo "usage: fd make <name>"
	echo "       fd mount <name>"
	echo "       fd umount"
	} >&2
	;;
    *)
	die "unknown command '$1'"
	;;
esac
