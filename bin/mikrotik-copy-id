#!/usr/bin/env bash

. lib.bash || exit

usage() {
	echo "Usage: $progname [-i <path>] <host>"
	echo
	echo_opt "-i <path>" "OpenSSH public key to upload"
}

ids=()

while getopts ':i:' OPT; do
	case $OPT in
	i) ids+=("$OPTARG");;
	*) lib:die_getopts;;
	esac
done; shift $((OPTIND-1))

host=$1

if [[ ! $host ]]; then
	die "hostname not provided"
fi

if [[ $host == \[*:*\] ]]; then
	scphost="$host"
	host="${host#'['}"
	host="${host%']'}"
elif [[ $host == *:*:*:* ]]; then
	scphost="[$host]"
elif [[ $host == *[:/]* ]]; then
	die "invalid hostname '$host'"
else
	scphost="$host"
fi

if (( ! ${#ids[@]} )); then
	ids=(~/.ssh/id_rsa.pub)
fi

for file in "${ids[@]}"; do
	if [[ ! -s $file ]]; then
		err "$file: does not exist"
		continue
	fi
	if [[ $file != *.pub ]]; then
		err "$file: not a public key file"
		continue
	fi
	while read -r algo _; do
		if [[ $algo != @(ssh-rsa|ssh-ed25519) ]]; then
			err "$file: \"$algo\" keys are not supported by RouterOS"
			continue
		fi
	done < "$file"
done

(( !errors )) || exit
confirm "upload ${ids[*]}?" || exit

ltmpfile=$(mktemp /tmp/key_XXXXXXXXXX)
for file in "${ids[@]}"; do
	info "uploading $file to $host"
	rtmpfile="tmp_$(uuidgen).pub"
	key=$(< "$file")
	key=${key//'('}
	key=${key//')'}
	printf '%s\n' "$key" > "$ltmpfile"
	# Establish mux socket (scp no longer does so)
	ssh "$host" ":"
	scp "$ltmpfile" "$scphost:$rtmpfile" || exit
	# Wait for the file to show up (not always instant; silly RouterOS SSH)
	until ssh "$host" "/file print detail where name=\"$rtmpfile\"" \
	      | grep -qs "$rtmpfile"; do
		sleep 0.1
		echo -n "."
	done
	echo ""
	ssh "$host" "/user ssh-keys import public-key-file=\"$rtmpfile\""
	ssh "$host" "/file remove [find name=\"$rtmpfile\"]"
done

rm -f "$ltmpfile"

info "done"
ssh "$host" "/user ssh-keys print"

((!errors))
