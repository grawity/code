#!/usr/bin/env bash
# x509 -- show information about an X.509 certificate

. lib.bash || exit

highlight() {
	if [ -t 1 ]; then
		sed "$1 s/.*/"$'\e[1m&\e[m'"/"
	else
		cat
	fi
}

if have certtool; then
	use='certtool'
elif have openssl; then
	use='openssl'
elif have certutil; then
	use='nss-certutil'
else
	die "no GnuTLS or OpenSSL tools present"
fi

while getopts ':gno' OPT; do
	case $OPT in
	g) use='certtool';;
	n) use='nss-certutil';;
	o) use='openssl';;
	*) lib:die_getopts;;
	esac
done; shift $((OPTIND-1))

if (( ! $# )); then
	set -- /dev/stdin
fi

unset temp

for file; do
	debug "processing '$file'"
	if [[ "$file" == "-" || "$file" == "/dev/stdin" ]]; then
		if [[ ! "$temp" ]]; then
			temp=$(mktemp "/tmp/x509_XXXXXXXX")
		fi
		debug "- copying stdin to temporary file"
		cat > "$temp"
		file="$temp"
	fi

	der=0
	if [[ "$(head -c 2 "$file")" == $'\x30\x82' ]]; then
		debug "- is probably in DER format"
		der=1
	fi

	args=()
	unset arg
	case $use in
	'certtool')
		if (( der )); then
			arg="--inder"
		fi
		debug "- calling 'certtool${arg:+ }$arg'"
		certtool $arg -i < "$file" |
			sed -r '/^-----BEGIN/,/^-----END/d' |
			awk '
				BEGIN {m=5}
				{c=0}
				/^\t*([0-9a-f][0-9a-f]:)+[0-9a-f][0-9a-f]$/ {c=1}
				# Remember indentation of the line
				c {ws=$0; sub(/[^ \t].*/, "", ws)}
				c {n++; p=$0}
				# Exactly 1 more line? Print it directly
				!c && n==m {print p}
				!c && n>m {print ws "\033[3m(" n-m+1 " more lines)\033[m"}
				!c {n=0}
				n<m {print}
			' |
			highlight '/^X\.509 Certificate /'
		;;
	'openssl')
		if (( der )); then
			arg+=" -inform DER"
		fi
		arg+=" -nameopt RFC2253"
		arg+=" -nameopt sep_comma_plus_space"
		debug "- calling 'openssl x509${arg:+ }$arg'"
		openssl x509 -noout -text -certopt no_sigdump $arg < "$file" |
			awk '/Exponent:/ {m=0} !m {print} /Modulus:/ {m=1}' |
			highlight '/^Certificate/'
		;;
	'nss-certutil')
		db=$(mktemp -d /tmp/nss.XXXXXXXX)
		name="Temporary X.509 certificate"
		certutil -A -d "$db" -i "$file" -n "$name" -t ",,"
		certutil -L -d "$db" -n "$name" |
			awk '/Exponent:/ {m=0} !m {print} /Modulus:/ {m=1}' |
			awk '!m {print} /Signature:/ {m=1} !/:$/ {m=0}' |
			awk '/Certificate Trust Flags:/ {m=1} !m {print} /^$/ {m=0}' |
			highlight '/^Certificate/'
		rm -rf "$db"
		;;
	esac
done

if [[ "$temp" ]]; then
	debug "removing temp file '$temp'"
	rm -f "$temp"
fi
