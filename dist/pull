#!/usr/bin/env bash

[ "$DEBUG" ] && set -x
set -e

msg=

have() { command -v "$1" >/dev/null; }

log() {
	msg=$*
	if [ -t 1 ]; then
		printf "\e[32m--\e[m %s\e[m\n" "$msg"
	fi
}

silent() {
	local tmp=$(mktemp /tmp/pull.XXXXXX) rc=0
	if "$@" >"$tmp" 2>&1; then
		rc=0
	else
		rc=$?
		echo "error: command '$1' returned $rc"
		echo "# log: $msg"
		echo "# cwd: $PWD"
		echo "# args: $*"
		cat "$tmp"
	fi >&2
	rm -f "$tmp"
	return $rc
}

on_master() {
	[ "$(git symbolic-ref HEAD 2>/dev/null)" = refs/heads/master ] ||
	[ "$(git symbolic-ref HEAD 2>/dev/null)" = refs/heads/main ]
}

migrate_head() {
	if [ "$(git symbolic-ref HEAD)" = refs/heads/master ]; then
		if git rev-parse --quiet --verify refs/remotes/origin/main >/dev/null; then
			echo "renaming branch 'master' to 'main' at $(pwd)"
			git branch -m main
			git branch -u origin/main
		fi
	fi
}

if [ ! "$xyzzy" ]; then
	PATH="$HOME/code/bin:$PATH"; export PATH

	if ! git var GIT_AUTHOR_IDENT >/dev/null; then
		echo "removed broken .gitconfig"
		mv -f ~/.gitconfig ~/gitconfig.bad ||
		rm -f ~/.gitconfig
	fi

	cd ~/code
	if on_master; then
		log "fetching code.git"
		silent git pull --ff-only
	else
		log "skipping code.git (not on master)"
	fi
	xyzzy=42 exec dist/pull
else
	today=$(date +%d)

	migrate_head

	if [ $today -eq 7 ]; then
		log "compacting code.git"
		silent nice git gc
	fi &

	if [ -d ~/.gnupg ] && [ ! -e ~/.ssh/authorized_keys.optout ]; then
		log "updating authorized_keys"
		security/update-authorized-keys
	fi

	dotdir=~/.dotfiles
	[ -d "$dotdir" ] || dotdir=~/.config/dotfiles
	[ -d "$dotdir" ] || dotdir=~/lib/dotfiles
	if [ -d "$dotdir" ]; then
		(cd "$dotdir"
		if on_master; then
			log "updating dotfiles.git"
			silent git fetch origin
			silent git merge --ff-only origin/master || {
				git stash save "dist/pull on $(date)"
				git checkout -f master
				git reset --hard origin/master
			}

		else
			log "skipping dotfiles.git (not on master)"
		fi)

		(cd "$dotdir"
		if [ $today -eq 14 ]; then
			log "compacting dotfiles.git"
			silent nice git gc
		fi) &

		log "running dotfiles/install"
		"$dotdir"/install -u
	fi

	if [ -f ~/.k5login ] && [ ! -k ~/.k5login ]; then
		log "updating .k5login"
		security/update-k5login
	fi

	if [ -f ~/.forward ] && [ ! -k ~/.forward ] && [ ! -L ~/.forward ]; then
		fwd=$(cat ~/.forward)
		case $fwd in grawity@*)
			echo "found '$fwd' in ~/.forward, adjusting via sendmail"
			if [ -x /usr/sbin/sendmail ]; then
				sendmail=/usr/sbin/sendmail
			elif [ -x /usr/lib/sendmail ]; then
				sendmail=/usr/lib/sendmail
			else
				sendmail=
			fi
			from="$(whoami)@$(bin/fqdn || hostname -f)"
			if [ "$sendmail" ]; then
				echo "- found sendmail at $sendmail"
				echo "\"|$sendmail -oi -f $from $fwd\"" > ~/.forward
				echo "- new contents: $(cat ~/.forward)"
			else
				echo "- sendmail not found"
				echo "- fix $(hostname):$HOME/.forward manually!"
			fi
		esac
	fi &

	wait
fi
