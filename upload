#!/usr/bin/env bash

. lib.bash || exit

usage() {
	echo "Usage: $progname [-1] [-d <subdir>] <file>…"
	echo #|---'---|---'---|
	echo "  -1            upload to fs1 instead of main site"
	echo "  -d path       create a subdirectory"
}

year=$(date +%Y)

fsbase="virgule:nullroute/tmp/$year"
urlbase="https://nullroute.eu.org/tmp/$year"

fs1_fsbase="ukradius:fs1/tmp/$year"
fs1_urlbase="http://fs1.nullroute.eu.org/tmp/$year"

# parse command line

arg_server=
arg_subdir=

while getopts ":1d:" OPT; do
	case $OPT in
	1) arg_server=fs1;;
	d) arg_subdir=$OPTARG;;
	*) die_getopts;;
	esac
done; shift $((OPTIND-1))

if [[ $arg_server ]]; then
	_fsbase="${arg_server}_fsbase"
	_urlbase="${arg_server}_urlbase"
	if [[ ${!_fsbase} && ${!_urlbase} ]]; then
		fsbase=${!_fsbase}
		urlbase=${!_urlbase}
		trace "uploading to '$fsbase'"
	else
		die "unknown server '$arg_server'"
	fi
fi

if [[ $arg_subdir ]]; then
	fsbase+="/$arg_subdir"
	urlbase+="/$arg_subdir"
fi

# prepare upload target

if [[ $arg_server || $arg_subdir ]]; then
	# $arg_server is a hack, until I copy rotate-up.sh to all other servers
	ssh "${fsbase%%:*}" "mkdir -p '${fsbase#*:}'"
fi

# upload files

clip=()

for arg; do
	if [[ ! -f $arg ]]; then
		err "'$arg' is not a file"
	elif [[ ! -s $arg ]]; then
		warn "'$arg' is empty, skipping"
	else
		name=${arg##*/}
		arg=$(realpath "$arg")
		debug "* source: '$arg'"
		debug "  target: '$fsbase/$name'"
		rsync -Ps "$arg" "$fsbase/$name"
		echo "$name → $urlbase/$name"
		clip+=("$urlbase/$name")
	fi
done

if [[ "$DISPLAY" ]] && (( ${#clip[@]} )); then
    echo -n "${clip[*]}" | xsel -i -b
fi

(( !errors ))
