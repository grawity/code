#!/usr/bin/env bash
# gw-core-console -- attach to ttyS0 of UK-GW

# Use IP address in case DNS is broken (which it will be,
# because gw-core is also the primary DNS resolver).
bmc_host=bmc-gw.utenos-kolegija.lt
bmc_addr=10.254.28.9

# VLAN for direct L2 access (2023-07-03: likely not needed
# anymore, as the gateway is now gw-b56 rather than gw-core)
phy_dev=eno1
vlan_id=28
vlan_dev=$phy_dev.$vlan_id
vlan_addr=10.254.28.219/24

attach_console() {
	rconsole ${bmc_host}@${bmc_addr}
}

can_have_vlan() {
	[[ $HOSTNAME == @(ember|wind) ]]
}

has_vlan() {
	ip -j -d link | jq -e -r \
		".[]
		| select(.linkinfo.info_kind == \"vlan\")
		| select(.linkinfo.info_data.id == $vlan_id)
		| .ifname" > /dev/null
}

setup_vlan() {
	if has_vlan; then
		echo "[VLAN $vlan_id already exists]"
		vlan_added=0
	else
		echo "[Adding temporary VLAN $vlan_id]"
		sudo ip link add $vlan_dev link $phy_dev type vlan id $vlan_id &&
		sudo ip link set $vlan_dev alias "Temporary VLAN for ${0##*/}" &&
		sudo ip link set $vlan_dev up &&
		sudo ip addr add $vlan_addr dev $vlan_dev &&
		vlan_added=1
	fi
}

teardown_vlan() {
	if (( vlan_added )); then
		echo "[Removing temporary VLAN]"
		sudo ip link del $vlan_dev
		vlan_added=0
	fi
}

if [[ $1 == -f ]]; then
	echo "[40;93mIndirect access through network.[m"
	attach_console
elif [[ $1 == -v ]] || can_have_vlan; then
	echo "[40;92mDirect access through VLAN.[m"
	trap teardown_vlan SIGINT
	setup_vlan
	attach_console
	teardown_vlan
else
	echo "[40;91mNo access from this system.[m"
	exit 3
fi
