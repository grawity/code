#!/usr/bin/env bash
# ssh-pkcs11 -- Wrapper which allows directly using PKCS#11 modules with tools
# that rely on ssh-agent (such as `ssh-keygen -Y sign`).
#
# Note: ssh-keygen supports -D and -I options when signing certificates using a
# CA key, but oddly not when signing data via -Y.

dirs=(/usr/lib/pkcs11 /usr/lib)
lib='p11-kit-proxy.so'
do_add=0
do_del=0

while getopts "ad" OPT; do
	case $OPT in
	a) do_add=1;;
	d) do_del=1;;
	*) exit 2;;
	esac
done; shift $((OPTIND-1))

if [[ ! $_SSH_PKCS11_MOD ]]; then
	if [[ $lib != */* ]]; then
		for dir in "${dirs[@]}"; do
			if [[ -e $dir/$lib ]]; then
				lib=$dir/$lib
				break
			fi
		done
	fi
	if [[ $lib != */* ]]; then
		echo "${0##*/}: Could not find PKCS#11 library '$lib'" >&2
		exit 1
	fi
	if (( do_add || do_del )); then
		if (( do_del )); then
			ssh-add -e "$lib"
		fi
		if (( do_add )); then
			ssh-add -s "$lib"
		fi
	else
		export _SSH_PKCS11_MOD=$lib
		exec ssh-agent "$0" "$@"
	fi
else
	ssh-add -s "$_SSH_PKCS11_MOD" &&
	exec "$@" || exit
fi
