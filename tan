#!/usr/bin/env bash

. lib.bash || exit

media=~/.run/media/grawpqi
root=$media/Private/codecard

localpwfile=~/Private/.codecard.key
mediapwfile=$media/Private/.codecard.key

test -s "$localpwfile"	|| die "local key not found: $localpwfile"
mountpoint -q "$media"	|| die "media not mounted: $media"
test -d "$root"		|| die "path not found: $root"
test -s "$mediapwfile"	|| die "media key not found: $mediapwfile"

decrypt() {
	local file=$root/$1.gpg
	test -e "$file" || die "file not found: $file"
	cat "$file" \
	| gpg -d --batch --passphrase-file="$localpwfile" \
	| gpg -d --batch --passphrase-file="$mediapwfile" \
	| gpg -d
} 2>/dev/null

encrypt() {
	local file=$root/$1.gpg
	[ -e "$file" ] || die "file not found: $file"
	cat \
	| gpg -c \
	| gpg -c --batch --passphrase-file="$mediapwfile" \
	| gpg -c --batch --passphrase-file="$localpwfile" \
	> "$file"
} 2>/dev/null

reveal() {
	decrypt "all" | awk "NR == $1 {print \$2; exit}" |
	if [[ "$DISPLAY" ]]; then
		xsel -i -b
		(sleep 5; xsel -c; xsel -c -b) &
	else
		read tan
		printf '%s ' $tan
		(sleep 5; printf '\rXXXXXX\r\e[J\n')
	fi
}

unset GPG_AGENT_INFO

[[ $1 == all ]] && {
	decrypt "all"
	exit
}

[[ $1 ]] &&
reveal "$@"
