#!/usr/bin/env perl
use v5.14;
use warnings;
use strict;
use Getopt::Long qw(:config no_ignore_case);
use Net::DBus;
use Net::DBus::Reactor;
use Nullroute::Lib qw(_debug);
use Nullroute::KitchenSink qw(coord_distance);

sub GeoClue2 {
	Net::DBus
	->system
	->get_service("org.freedesktop.GeoClue2")
	->get_object(shift // "/org/freedesktop/GeoClue2/Manager")
}

my $want_lon = 0;
my $want_lat = 0;
my $want_range = 0;

sub exit_reactor {
	$::status = shift;
	Net::DBus::Reactor->main->shutdown();
}

sub handle_loc {
	my ($data) = @_;
	my $acc = $data->{Accuracy};
	my $lat = $data->{Latitude};
	my $lon = $data->{Longitude};
	_debug("acc $acc, lat $lat, lon $lon");
	if ($acc > 2_000) {
		_debug("not enough accuracy, skipping result");
		return;
	}
	my $d = coord_distance($lat, $lon, $want_lat, $want_lon);
	_debug("distance $d meters");
	exit_reactor($d > $want_range ? 1 : 0);
}

GetOptions(
	"longitude=f" => \$want_lon,
	"latitude=f" => \$want_lat,
	"range=f" => \$want_range,
) or die "$!";

my $client_ptr = GeoClue2->GetClient();
_debug("got client: $client_ptr");
my $client = GeoClue2($client_ptr);
$client->connect_to_signal("LocationUpdated" => sub {
	my ($old_ptr, $new_ptr) = @_;
	_debug("got location: $new_ptr");
	my $data = GeoClue2($new_ptr)->GetAll("org.freedesktop.GeoClue2.Location");
	handle_loc($data);
});
$client->Set("org.freedesktop.GeoClue2.Client",
	     "DesktopId", "geoclue-where-am-i");
$client->Start();

$::status = 0;
_debug("entering main loop");
Net::DBus::Reactor->main->run();
_debug("reactor stopped; preset status $::status");
exit $::status;
