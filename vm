#!/bin/bash

ETHERS=~/lib/vm/ethers
UUIDS=~/lib/vm/uuids

randether() {
	printf 'f0:00:0d:%02x:%02x:%02x' \
		$(( RANDOM & 255 )) \
		$(( RANDOM & 255 )) \
		$(( RANDOM & 255 ))
}

getether() {
	local name=$1
	local addr=$(awk "\$2 == \"$name\" {print \$1}" "$ETHERS")
	if [ ! "$addr" ]; then
		while true; do
			addr=$(randether)
			if ! grep -qs "^$addr[[:space:]]" "$ETHERS"; then
				printf '%s %s\n' "$addr" "$name" >> "$ETHERS"
				break
			fi
		done
	fi
	echo "$addr"
}

getuuid() {
	local name=$1
	local uuid=$(awk "\$1 == \"$name\" {print \$2}" "$UUIDS")
	if [ ! "$uuid" ]; then
		uuid=$(uuidgen)
		printf '%s %s\n' "$name" "$uuid" >> "$UUIDS"
	fi
	echo "$uuid"
}

NAME=generic

if [[ $1 == @* ]]; then
	NAME=${1#@}
	shift
fi


: ${arch:=`uname -m`}

case $arch in
i?86|x86_64)	kvm="-enable-kvm";;
*)		kvm=;;
esac

mem=512
hda=$NAME.img
nic="pcnet"
ether=$(getether "$NAME")

vmargs=()

case $NAME in
	deb-sparc)
		mem=256
		arch=sparc
		kvm=""
		nic="lance"
		;;
	deb-ppc)
		mem=256
		arch=ppc
		kvm=""
		nic="virtio"
		;;
	fecore6)
		mem=256
		;;
	fedora17|fedora18)
		nic="virtio"
		;;
	freebsd9)
		nic="e1000"
		;;
	os2-warp)
		arch=i386
		mem=64
		kvm=""
		vmargs+=(
			-soundhw sb16
		)
		;;
	slack33)
		mem=64
		nic="lance"
		;;
	windows95)
		mem=64
		nic="pcnet"
		vmargs+=(
			-soundhw sb16
			-net "nic,macaddr=$(getether $NAME:1),model=rtl8139"
		)
		;;
esac

[[ $hda == */* ]] ||
hda=~/lib/vm/$hda

## set up Qemu command

args=(
	qemu-system-$arch
	-name "$NAME"
	-uuid "$(getuuid "$NAME")"
	-monitor "stdio"
	-ctrl-grab
)

[[ $NOKVM ]] ||
	args+=($kvm)

args+=(
	-m "$mem"
	-hda "$hda"
)

[[ $NONET ]] ||
	args+=(
		-net "nic,macaddr=$ether,model=$nic"
		-net "vde"
	)

args+=(
	"${vmargs[@]}"
	"$@"
)

export QEMU_AUDIO_DRV="pa"

exec "${args[@]}"
