#!/usr/bin/env perl
# utfvis -- make non-ASCII Unicode characters highly visible

use warnings;
use strict;
use open qw(:std :encoding(UTF-8));
use Getopt::Long qw(:config bundling no_ignore_case);

sub usage {
	print for
	"Usage: utfvis [-o] <file>...\n",
	"\n",
	"Options:\n",
	"  -o, --only    show only lines containing non-ASCII characters\n";
}

sub hilight {
	my ($char, $color) = @_;
	$char = sprintf "<U+%04X>", ord($char);
	if ($color) {
		return "\e[1;37;41m$char\e[m";
	} else {
		return $char;
	}
}

my $opt_only = 0;
my $opt_color = (-t 1);
my $opt_control = 0;

GetOptions(
	"o|only!" => \$opt_only,
	"color!" => \$opt_color,
	"control" => \$opt_control,
	"help" => sub { usage(); exit(0); },
) or exit(2);

while (<>) {
	my $n = 0;
	if ($opt_control) {
		# Highlight only control characters
		$n = s/[\x00-\x09\x0b-\x1f\x80-\xff]/hilight($&, $opt_color)/ge;
	} else {
		# Highlight all non-printable-ASCII characters
		$n = s/[^\n\t\x20-\x7e]/hilight($&, $opt_color)/ge;
	}

	if ($opt_only) {
		if ($opt_color) {
			print "\e[4m$ARGV:$.:\e[m$_" if $n;
		} else {
			print "$ARGV:$.:$_" if $n;
		}
	} else {
		print;
	}
} continue {
	# Reset $. between files, as <> doesn't do that automatically.
	close ARGV if eof(ARGV);
}
