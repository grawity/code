#!/usr/bin/env bash
# testrad -- automates RADIUS testing between domains

. lib.bash || exit

cd ~

have 'radtest'			|| err "missing 'radtest'"
have 'rad_eap_test'		|| err "missing 'rad_eap_test'"
test -x 'bin/eapol_test'	|| err "missing './bin/eapol_test'"

declare -- self via using eap
declare -A user pass host secret
declare -- _user _pass _host _secret _mech

# parse arguments

while (( $# )); do
	if [[ ! $self ]]; then
		self=$1
		via=$self
	else
		case ${1#--} in
		'via')		via=$2; shift;;
		'using')	using=$2; shift;;
		'eap')		eap=$2; shift;;
		'user')		_user=$2; shift;;
		'pass')		_pass=$2; shift;;
		'host')		_host=$2; shift;;
		'secret')	_secret=$2; shift;;
		*)		err "bad arg: \"$1\"";;
		esac
	fi
	shift
done

[[ $self ]]			|| die "missing argument (our realm)"

# parse config

. ~/lib/testrad.conf.sh		|| die "could not load configuration"

# load parameters

[[ $_user ]]	|| _user=${user[$self]}
[[ $_pass ]]	|| _pass=${pass[$self]}
[[ $_host ]]	|| _host=${host[$via]}
[[ $_secret ]]	|| _secret=${secret[$via]}

_eap=${eap^^}
_mech=${using:-mschap}

[[ $_user ]]			|| err "missing username for '$self'"
[[ $_pass ]]			|| err "missing password for '$self'"
[[ $_host ]]			|| err "missing RADIUS server for '$via'"
[[ $_secret ]]			|| err "missing RADIUS secret for '$via'"

case $_mech in
'pap')		_phase2='PAP';;
'chap')		_phase2='CHAP';;
'mschap')	_phase2='MSCHAPV2';;
*)		err "unknown mechanism '$_mech'"
esac

(( ! errors )) || exit

log "account: \"$_user\""

log "home server: ${name[$self]} (${host[$self]:-none})"

log "proxy via: ${name[$via]} ($_host)"

if [[ $eap ]]; then
	log "using $_phase2 inside EAP-$_eap"
	cmd=(rad_eap_test -H "$_host" -P 1812 -S "$_secret" -u "$_user" -p "$_pass"
	                  -m WPA-EAP -v -e "$_eap" -2 "$_phase2")
else
	log "using direct $_phase2"
	cmd=(radtest -t "$_mech" "$_user" "$_pass" "$_host" 0 "$_secret")
fi

echo "+ ${cmd[*]}"

if "${cmd[@]}"; then
	log "test successful"
else
	r=$?
	warn "test failed ($cmd returned $r)"
	exit $r
fi
