#!/usr/bin/env bash

umask 077

. lib.bash || exit

options=()
keydirs=()
keybase="archive-%s.key"
keyfile=
clobber=0

. "$path_config/gpgin.conf.sh" || exit

case ${0##*/} in
    gpgin)  mode=encrypt;;
    gpgout) mode=decrypt;;
esac

while getopts ":D:f" OPT; do
	case $OPT in
	D) keydirs+=("$OPTARG");;
	f) clobber=1;;
	*) lib::die_getopts;;
	esac
done; shift $((OPTIND-1))

archive=$1
name=${archive##*/}
name=${name%.*}
name=${name%.tar}

[[ $archive ]] || die "missing archive file path"
[[ $archive == *.gpg ]] || die "archive path should have a .gpg extension"

keybase=$(printf "$keybase" "${name##*/}")

for dir in "${keydirs[@]}"; do
	if [[ -e "$dir/$keybase" ]]; then
		keyfile="$dir/$keybase"
		break
	fi
done

case $mode in
    encrypt)
	if [[ -s "$archive" ]]; then
		if (( clobber )); then
			notice "overwriting existing file '$archive'"
		else
			die "won't overwrite existing archive '$archive'"
		fi
	fi
	if [[ ! $keyfile ]]; then
		keyfile="${keydirs[0]}/$keybase"
		log "generating keyfile: $keyfile"
		tr -dc "A-Za-z0-9" < /dev/urandom | head -c 64 > "$keyfile"
	fi
	options+=( --batch --passphrase-file "$keyfile" )
	options+=( --no-tty )
	pv -cN "clear" \
	| gpg "${options[@]}" --symmetric \
	| pv -cN "gpg" > "$archive"
	;;
    decrypt)
	if [[ ! $keyfile ]]; then
		die "key file not found"
	fi
	if [[ -t 1 ]]; then
		die "won't write archive to terminal"
	fi
	options+=( --batch --passphrase-file "$keyfile" )
	options+=( --no-tty --no-mdc-warning )
	pv -N "gpg" "$archive" \
	| gpg "${options[@]}" --decrypt
	;;
esac
