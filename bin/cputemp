#!/bin/bash

. lib.bash || exit

put_bar() {
	local color=$1 width=$2 char=$3 bar=""
	if ((width <= 0)); then
		return
	fi
	if ((color)); then
		printf "\e[38;5;%dm" "$color"
	fi
	if [[ $char == ?? ]]; then
		printf -v bar "%*s" "$((width-1))" ""
		printf "%s%s" "${bar// /${char%?}}" "${char#?}"
	else
		printf -v bar "%*s" "$width" ""
		printf "%s" "${bar// /$char}"
	fi
	if ((color)); then
		printf "\e[m"
	fi
}

draw_bar() {
	local -i time=$1 color=$2 width=$3 temp=$4

	# Dell thresholds:
	# off -> [~44°C] low ->

	local avg=$((count>depth ? roll/depth : temp))
	if ((avg>79)); then
		# red (bad)
		color+=1
	elif ((avg>=63)); then
		# yellow (medium/high fan)
		color+=3
	elif ((avg>43)); then
		# green (low fan?)
		color+=2
	else
		# blue (cold; no fan?)
		color+=4
	fi
	local width=$((temp-20))
	printf '%(%T)T ' $time
	char=█
	if ((color<8)); then
		: color+=8
		: char=▓
		char='-║'
	fi
	put_bar "$color" "$width" "$char"
	printf ' %3d°C' "$temp"
	#if ((color>=8)); then
	#	printf ' [%3d°C]' "$avg"
	#fi
	printf '\n'
}

dev=""

for _dev in /sys/class/hwmon/hwmon*/; do
	if [[ -e "$_dev/name" && "$(< $_dev/name)" == coretemp ]]; then
		dev=${_dev%/}
	fi
done
if [[ ! $dev ]]; then
	die "no coretemp hwmon found"
fi

subdev=""
subdev_pkg=""
subdev_cr0=""

for _input in $dev/temp*_input; do
	_label=$(< "${_input/%_input/_label}")
	if [[ $_label == "Package id 0" ]]; then
		subdev_pkg=$_input
	elif [[ $_label == "Core 0" ]]; then
		subdev_cr0=$_input
	fi
done

if [[ $subdev_pkg ]]; then
	subdev=$subdev_pkg
elif [[ $subdev_cr0 ]]; then
	subdev=$subdev_cr0
else
	die "no coretemp/Core 0 hwmon found"
fi

dev_name=$(< $dev/name)
subdev_name=$(< ${subdev/%_input/_label})
info "Using sensor '$subdev' ($dev_name:$subdev_name)"

interval=1
last=0
count=0
roll=0
depth=3
hist=()
while (( !last )) || sleep $interval; do
	printf -v ts '%(%s)T' -1
	if (( last )); then
		temp=$last
		printf '\e[A'
		draw_bar $((ts-1)) 0 $((temp-20)) $temp
	fi
	temp=$(< $subdev)
	temp=$((temp / 1000))
	if ((roll && hist[count%depth])); then
		roll=$((roll-hist[count%depth]+temp))
	else
		roll=$((temp*depth))
	fi
	draw_bar $ts 8 $((temp-20)) $temp
	last=$temp
	hist[count++%depth]=$temp
done
