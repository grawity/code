#!/usr/bin/env bash

. lib.bash || exit

base=$(git config --get web.url)
type=$(git config --get web.type)
head=$(git rev-parse --short=12 HEAD)

if [[ ! $type ]]; then
	case $base in
	https://github.com/*)
		type='github';;
	*/cgit/*)
		type='cgit';;
	*)
		die "unknown type for url '$base'";;
	esac
fi

if [[ ! $base ]]; then
	remote=$(git remote get-url origin)
	if [[ $remote == https://github.com/* ]]; then
		base=${remote%.git}
		type=github
	fi
fi

toplevel=$(git rev-parse --show-toplevel)
prefix=$(git rev-parse --show-prefix)
debug "repo toplevel: '$toplevel'"
debug "repo prefix: '$prefix'"

base=${base%/}
debug "base: '$base'"

is_file() {
	if [[ $(git config core.bare) == true ]]; then
		git rev-parse --verify "HEAD:/$1" >& /dev/null
	else
		[[ -e "$1" ]]
	fi
}

for name; do
	debug "arg: '$name'"
	if t=$(git rev-parse --short=20 "$name") && [[ $t ]]; then
		: ${mode:=commit}
		head=$t
	elif t=$prefix$name && is_file "$name"; then
		debug "looking for file '$t'"
		: ${mode:=file}
		path=$t
	fi
	debug "arg '$name' is a $mode"

	case $type in
	'cgit')
		case $mode in
		'log')    url="$base/log/$path?h=$head";; # TODO: make this global log
		'flog')   url="$base/log/$path?h=$head";;
		'file')   url="$base/tree/$path?h=$head";;
		'commit') url="$base/commit/?id=$head";;
		esac;;
	'github')
		case $mode in
		'log')    url="$base/commits/$head";;
		'flog')   url="$base/commits/$head/$path";;
		'file')   url="$base/blob/$head/$path";;
		'commit') url="$base/commit/$head";;
		esac;;
	'gitweb')
		base=${base//";a=summary"/}
		case $mode in
		'log')    url="$base;a=shortlog;h=$head";;
		'flog')   url="$base;a=history;f=$path;h=$head";;
		'file')   url="$base;a=blob;f=$path;h=$head";;
		'commit') url="$base;a=commit;h=$head";;
		*)        die "$type not yet implemented";;
		esac;;
	esac

	[[ $url ]] || die "$type/$mode not yet implemented"

	echo "$url"
done
