#!/usr/bin/env perl
use warnings;
use strict;
use File::Basename;
use Image::Size;
use POSIX;
use Nullroute::Lib;

my $qr_date = qr/\d{4}-\d{2}-\d{2}/;

sub detect_host {
	my ($file) = @_;

	my ($h, $w) = imgsize($file);
	_debug("image '$file' is $h*$w");

	return "snow" if ("$h*$w" eq "1280*1024");
	return "raindows";
}

sub do_rename {
	my ($file) = @_;

	my ($old_name, $dir, $suffix) = fileparse($file);
	my $new_name = $old_name;

	for ($new_name) {
		# mpv - match Android
		if (/^mpv-shot.*(\.[^.]+)$/) {
			my @time = gmtime((stat $file)[9]);
			s//strftime("Screenshot_%Y%m%d_%H%M%S", @time).$1/e;
			last;
		}

		# Dropbox on Windows
		#s/^Screenshot ($qr_date) (\d+)\.(\d+)\.(\d+)/$1.$2$3$4.raindows/;
		if (/^Screenshot ($qr_date) (\d+)\.(\d+)\.(\d+)/) {
			my $host = detect_host($file);
			s//$1.$2$3$4.$host/;
		}

		# GNOME Shell
		s/^Screenshot from ($qr_date) (\d+):(\d+):(\d+)/$1.$2$3$4/;

		# Dropbox on Android
		#s/^($qr_date) (\d+)\.(\d+)\.(\d+)/$1.$2$3$4.nexus/;
		s/^(\d{4})-(\d{2})-(\d{2}) (\d+)\.(\d+)\.(\d+)/Screenshot_$1$2$3.$4$5$6/;

		# Android (??)
		#s/^Screenshot_($qr_date)-(\d+)-(\d+)-(\d+)/$1.$2$3$4.nexus/;
	}

	if ($new_name eq $old_name) {
		return;
	} elsif (-e $new_name) {
		_err("not renaming '$old_name' to '$new_name': target already exists");
	} else {
		_info("renaming '$dir$old_name' to '$new_name'");
		return if $::debug;
		if (!rename($dir.$old_name, $dir.$new_name)) {
			_err("rename '$old_name' to '$new_name': !! $!");
		}
	}
}

sub do_dirs {
	my @dirs = reverse @_;

	while (@dirs) {
		my $dir = pop @dirs;
		my @next = ();
		_debug("processing '$dir'");
		if (opendir(my $dh, $dir)) {
			#_info("reading '$dir'");
			for my $name (sort readdir($dh)) {
				my $path = "$dir/$name";

				if ($name eq "." || $name eq "..") {
					next;
				}
				elsif (-d $path) {
					push @next, $path;
					#do_dirs($path);
				}
				elsif (-f $path) {
					do_rename($path);
				}
			}
			closedir($dh);
		} else {
			_err("cannot open directory '$dir': $!");
		}
		if (@next) {
			push @dirs, reverse @next;
		}
	}
}

do_dirs(".");

Nullroute::Lib::_exit();
