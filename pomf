#!/usr/bin/env bash
# vim: ts=4:sw=4:et

declare -A site_bases site_apis upload_bases

site_bases=(
    [1339]=http://1339.cf
    [cat]=https://pomf.cat
    [max]=https://maxfile.ro
    [mixtape]=https://mixtape.moe
)

site_apis=(
    [1339]=/upload.php
    [max]=/static/upload.php
)

upload_bases=(
    [1339]=http://a.1339.cf
    [cat]=https://a.pomf.cat
    [max]=https://d2.maxfile.ro
    [mixtape]=https://my.mixtape.moe
)

default_site=cat

. lib.bash || exit
. libkitchensink.bash || exit

usage() {
    echo "Usage: $progname [-p site] <file>..."
    echo ""
    echo_getopt "-p site" "select hosting site"
    echo ""
    echo "Sites:"
    local _s; for _s in ${!site_bases[@]}; do
        printf "  %s (%s)\n" "$_s" "${site_bases[$_s]}"
    done | sort
}

have curl  || err "missing 'curl'"
have jshon || err "missing 'jshon'"

lib::errexit

mkdir -p "$path_cache"
log_file="$path_cache/pomf.log"

# parse command line

arg_site=$default_site

while getopts ":p:" OPT; do
    case $OPT in
    p) arg_site=$OPTARG;;
    *) lib::die_getopts;;
    esac
done; shift $((OPTIND-1))

site_base=${site_bases[$arg_site]}
api_url=${site_base}${site_apis[$arg_site]:-"/upload.php"}
upload_base=${upload_bases[$arg_site]}

[[ $site_base && $upload_base ]] || die "unknown provider '$arg_site'"

curl_args=()
for f in "$@"; do
    if [[ -e "$f" ]]; then
        curl_args+=(-F "files[]=@$f")
    else
        err "file '$f' not found"
    fi
done

(( !errors )) || exit

(( ${#curl_args[@]} )) || die "nothing to upload"

if [[ -t 2 ]] && ks:larger_than "$f" "1 << 18"; then
    curl_args+=(-#)
else
    curl_args+=(-s)
fi

if [[ $DEBUG ]]; then
    curl_args+=(-v)
fi

debug "posting to '$api_url'"
upload=$(curl -S "${curl_args[@]}" "$api_url")
urls=$(jshon -e files -a -e name -upe url -u <<< "$upload") || {
    trace "output: $upload"
    die "could not parse response"
}

clip=()
while { read -r name; read -r url; } do
    url=$upload_base/$url
    echo "$name â†’ $url"
    echo "$(date --rfc-3339=seconds) $url $name" >> "$log_file"
    clip+=("$url")
done <<< "$urls"

if [[ "$DISPLAY" ]] && (( ${#clip[@]} )); then
    if have xsel; then
        echo -n "${clip[*]}" | xsel -i -b
    fi
fi

(( !errors ))
