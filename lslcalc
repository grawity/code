#!/usr/bin/env perl
# Linden Dollar to USD rate calculator

my %rate = (
	USD_LSL => 230,
	USD_LTL => 2.50,
);

my $tax = 0.30;

my ($from, $fromc);

($from, $fromc) = @ARGV;

$mult = 1;

sub fm {
	my ($s, $n) = @_;
	my %m = (
		LTL => 'Lt',
		LSL => 'L$',
	);
	my $fmt = ($s eq 'LSL' ? "%d" : "%.2f")." %s";
	sprintf($fmt, $n, $m{$s} // $s);
}

sub LSL_USD { (shift() / $rate{USD_LSL}) + $tax }
sub USD_LSL { (shift() - $tax) * $rate{USD_LSL} }

sub USD_LTL { shift() * $rate{USD_LTL} }
sub LTL_USD { shift() / $rate{USD_LTL} }

if (lc $fromc eq 'lsl' || !$fromc) {
	my $lsl = $from;
	my $usd = LSL_USD($lsl);
	my $ltl = USD_LTL($usd);

	print fm(LSL => $lsl)." = ".fm(USD => $usd)."\n";
	print fm(LSL => $lsl)." = ".fm(LTL => $ltl)."\n";
}
elsif (lc $fromc eq 'usd') {
	my $usd = $from;
	my $lsl = USD_LSL($usd);

	print fm(USD => $usd)." = ".fm(LSL => $lsl)."\n";
}
elsif (lc $fromc eq 'ltl') {
	my $ltl = $from;
	my $usd = LTL_USD($ltl);
	my $lsl = USD_LSL($usd);

	print fm(LTL => $ltl)." = ".fm(USD => $usd)."\n";
	print fm(LTL => $ltl)." = ".fm(LSL => $lsl)."\n";
}
else {
	exit 1;
}
