#!/usr/bin/env bash
# vim: ts=4:sw=4:et

. lib.bash || exit
. libkitchensink.bash || exit

do_reupload=0

while getopts ':f' OPT; do
    case $OPT in
    f) do_reupload=1;;
    *) lib::die_getopts;;
    esac
done; shift $((OPTIND-1))

(( $# )) || die "nothing to upload"

clip=()

for f in "$@"; do
    if [[ -e "$f" ]]; then
        curl_args=(-F "file=@$f")
    else
        err "file '$f' not found"
        continue
    fi

    if [[ $DEBUG ]]; then
        curl_args+=(-v)
    fi

    if [[ -t 2 ]] && ks:larger_than "$f" "1 << 18"; then
        curl_args+=(-#)
    else
        curl_args+=(-s)
    fi

    if (( do_reupload )); then
        debug "re-upload was forced"
        unset url
    elif expire=$(ks:getattr "$f" "uguu.expire"); then
        if (( expire > `now` )); then
            debug "previous upload is still valid ($expire)"
            url=$(ks:getattr "$f" "uguu.url")
        else
            debug "previous upload has expired ($expire)"
            unset url
        fi
    fi

    if [[ $url ]]; then
        debug "using stored URL '$url' (expires on $expire)"
    else
        debug "uploading to uguu"
        url=$(curl -S "${curl_args[@]}" "https://uguu.se/api.php?d=upload-tool")
    fi

    echo "$f â†’ $url"
    clip+=("$url")

    ks:setattr "$f" "uguu.expire" "$(( `now` + 3600 ))"
    ks:setattr "$f" "uguu.url" "$url"
done

if [[ "$DISPLAY" ]] && (( ${#clip[@]} )); then
    echo -n "${clip[*]}" | xsel -i -b
fi

(( !errors ))
