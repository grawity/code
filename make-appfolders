#!/usr/bin/env perl
# make-appfolders -- generate GNOME Shell app-folder configuration
my %apps;
my %cats;
my %excl;
my %names;
my $this_apps;
my $this_cats;
my $this_excl;

sub app2desktop {
	my $name = shift;
	$name =~ s|/|-|g;
	$name .= ".desktop" unless $name =~ /\.desktop$/;
	return $name;
}

sub strfmt { "'".shift()."'" }

sub listfmt { @_ ? "[".join(", ", map {strfmt($_)} @_)."]" : "\@as []" }

sub section {
	my ($path, $items) = @_;
	my $str = "[".$path."]\n";
	for my $key (keys %$items) {
		$str .= $key."=".$items->{$key}."\n";
	}
	$str .= "\n";
	print $str;
	$str;
}

while (<>) {
	if (/^\t(.+)$/) {
		my $name = $1;
		if ($name =~ s/^!//) {
			push @$this_excl, $name;
		} elsif ($name =~ s/^@//) {
			push @$this_cats, $name;
		} else {
			push @$this_apps, $name;
		}
	}
	elsif (/^(.+): (.+)$/) {
		$names{$1} = $2;
		$apps{$1} = $this_apps = [];
		$cats{$1} = $this_cats = [];
		$excl{$1} = $this_excl = [];
	}
}

my $root = "/org/gnome/desktop/app-folders/";

system "dconf", "reset", "-f", $root."folders/";

open my $proc, "|-", "dconf", "load", $root;

print $proc section "/" => {
	"folder-children" => listfmt(sort keys %names),
};

print $proc section "folders/$_" => {
	"name" => strfmt($names{$_}),
	"apps" => listfmt(sort map {app2desktop($_)} @{$apps{$_}}),
	"categories" => listfmt(sort @{$cats{$_}}),
	"excluded-apps" => listfmt(sort map {app2desktop($_)} @{$excl{$_}}),
} for sort keys %names;

close $proc;
