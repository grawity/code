#!/usr/bin/env bash

. ~/lib/dotfiles/environ || exit
. lib.bash || exit

rootmarkdir=$path_config/synced

ourhost=${HOSTNAME%%.*}

fast_forward() {
	local ref=$1 newhead=$2
	local behind=$(git rev-list --count "$ref..$newhead")
	local ahead=$(git rev-list --count "$newhead..$ref")
	debug "'$ref' is $ahead ahead, $behind behind '$newhead'"
	if (( behind == 0 )); then
		true
	else
		debug "updating $ref to $newhead"
		git update-ref "$ref" "$newhead"
	fi
}

export_marks() {
	local repo=${1%/}
	local git_dir="$repo/.git"
	local mark_dir="$rootmarkdir/${repo##*/}.marks"
	debug "exporting local marks to '$mark_dir'"
	[[ -d $mark_dir ]] && mkdir -p "$mark_dir"
	cp -u -v "$repo/.git/refs/heads/master" "$mark_dir/$ourhost.master"
	cp -u -v "$repo/.git/refs/heads/main" "$mark_dir/$ourhost.master"
}

import_marks() {
	local repo=${1%/}
	local git_dir="$repo/.git"
	local mark_dir="$rootmarkdir/${repo##*/}.marks"
	local file host ref
	debug "importing remote marks from '$mark_dir'"
	for file in "$mark_dir"/*.master; do
		if [[ $file == *\ * ]]; then
			debug "removing sync conflict '$file'"
			rm -v "$file"
			continue
		fi
		host=${file##*/}
		host=${host%%.*}
		if [[ $host != "$ourhost" && $host != "all" ]]; then
			cp -u -v "$file" "$git_dir/refs/heads/$host"
			fast_forward "refs/heads/all" "refs/heads/$host"
		fi
	done
}

update_marks() {
	local repo=${1%/}
	export_marks "$repo"
	import_marks "$repo"
}

do_export=0
do_import=0

while getopts ":ei" OPT; do
	case $OPT in
	e) do_export=1;;
	i) do_import=1;;
	*) lib::die_getopts;;
	esac
done; shift $((OPTIND-1))

if (( !do_export && !do_import )); then
	do_export=1
	do_import=1
fi

if (( ! $# )); then
	set -- ~/src/{linux,systemd}
fi

for dir in "$@"; do
	dir=$(realpath -s "$dir")
	debug "processing '$dir'"
	if [[ ! -e "$dir/.git" ]]; then
		err "'$dir' is not a Git repository"
		continue
	fi
	if (( do_export )); then
		export_marks "$dir"
	fi
	if (( do_import )); then
		import_marks "$dir"
	fi
done

lib::exit
