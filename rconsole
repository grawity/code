#!/usr/bin/env bash
# rconsole -- attach to a server's remote console via IPMI SOL

. lib.bash || exit

case ${0##*/} in
	*-console)
		host=${0##*/}; host=${host%-console};;
	*)
		host=${1?missing hostname}; shift;;
esac

bhost="bmc.$host.nullroute.lt"

creds=$(getnetrc -sdf %a:%u:%p "ipmi/$bhost" ||
        getnetrc -sdf %a:%u:%p "ipmi/*")
priv=${creds%%:*}; creds=${creds#*:}
user=${creds%%:*}; creds=${creds#*:}
pass=$creds
if [[ ! $user || ! $pass ]]; then
	die "Credentials for 'ipmi/$bhost' not found in ~/.netrc"
fi
if [[ ! $priv ]]; then
	# Guess privilege level from username (e.g. Operator => priv OPERATOR)
	priv=${user^^}
fi

k_g=$(getnetrc -sdf %p "rmcp/$bhost" ||
      getnetrc -sdf %p "rmcp/*")


freeipmi_args=(           -h "$bhost" -u "$user" -p "$pass" -l "$priv" -k "$k_g")
ipmitool_args=(-I lanplus -H "$bhost" -U "$user" -P "$pass" -L "$priv" -k "$k_g")

# New ipmitool defaults to ciphersuite 17 (AES-CBC-128 with HMAC-SHA256), which
# iLO4 does not support. Fall back to the HMAC-SHA1 variant.
freeipmi_args+=(-I 3)
ipmitool_args+=(-C 3)

# TODO: ipmitool -k is string key, -y is hex key, which one matches ipmi-console?
# TODO: use -E -K for ipmitool
#IPMI_PASSWORD=$pass
#IPMI_KGKEY=$k_g

if [[ $1 == --@(power|power-status) ]]; then
	echo "Getting power status from '$bhost'"
	if have ipmi-power; then
		ipmi-power -D LAN_2_0 "${freeipmi_args[@]}" --stat
	elif have ipmitool; then
		ipmitool "${ipmitool_args[@]}" power status
	else
		die "no IPMI client tools installed"
	fi
elif [[ $1 == --power-@(on|off|cycle|reset) ]]; then
	cmd=${1#--power-}
	confirm "Send 'power $cmd' command to '$bhost'?" || exit
	info "Sending 'power $cmd' command to '$bhost'"
	if have ipmi-power; then
		ipmi-power -D LAN_2_0 "${freeipmi_args[@]}" --$cmd
	elif have ipmitool; then
		ipmitool "${ipmitool_args[@]}" power $cmd
	else
		die "no IPMI client tools installed"
	fi
elif [[ ! $1 ]]; then
	info "Connecting to serial console at '$bhost'"
	if have ipmi-console; then
		echo "[escape sequence: & .]"
		ipmi-console "${freeipmi_args[@]}"
	elif have ipmitool; then
		ipmitool "${ipmitool_args[@]}" sol activate
	else
		die "no IPMI client tools installed"
	fi
else
	die "Unrecognized arguments: '$*'"
fi
